<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.11.13 on linux)" generated="2025-07-11T11:34:11.820687" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="/app/robot-framework-automation/tests">
<suite id="s1-s1" name="Wifi" source="/app/robot-framework-automation/tests/wifi">
<suite id="s1-s1-s1" name="TS-001" source="/app/robot-framework-automation/tests/wifi/TS-001">
<suite id="s1-s1-s1-s1" name="TC-001" source="/app/robot-framework-automation/tests/wifi/TS-001/TC-001.robot">
<test id="s1-s1-s1-s1-t1" name="Full Ethernet Bridging and Performance Test" line="19">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-07-11T11:34:12.139635" level="INFO">${config} = {'devices': {'openwrt': {'ip': '10.10.10.23', 'username': 'root', 'password': 'root'}, 'PC1': {'ip': '10.10.10.11', 'username': 'osboxes', 'password': 'system@123'}, 'PC2': {'ip': '10.10.10.12', 'user...</msg>
<var>${config}</var>
<arg>${CONFIG_FILE}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-07-11T11:34:12.139159" elapsed="0.000518"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-07-11T11:34:12.140100" level="INFO">${devices} = {'openwrt': {'ip': '10.10.10.23', 'username': 'root', 'password': 'root'}, 'PC1': {'ip': '10.10.10.11', 'username': 'osboxes', 'password': 'system@123'}, 'PC2': {'ip': '10.10.10.12', 'username': 'osbo...</msg>
<var>${devices}</var>
<arg>${config}</arg>
<arg>devices</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-07-11T11:34:12.139856" elapsed="0.000285"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-07-11T11:34:12.140537" level="INFO">${BB} = {'ip': '10.10.10.23', 'username': 'root', 'password': 'root'}</msg>
<var>${BB}</var>
<arg>${devices}</arg>
<arg>openwrt</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-07-11T11:34:12.140329" elapsed="0.000242"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-07-11T11:34:12.140989" level="INFO">${PC1} = {'ip': '10.10.10.11', 'username': 'osboxes', 'password': 'system@123'}</msg>
<var>${PC1}</var>
<arg>${devices}</arg>
<arg>PC1</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-07-11T11:34:12.140733" elapsed="0.000286"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-07-11T11:34:12.141311" level="INFO">${PC2} = {'ip': '10.10.10.12', 'username': 'osboxes', 'password': 'system@123'}</msg>
<var>${PC2}</var>
<arg>${devices}</arg>
<arg>PC2</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-07-11T11:34:12.141162" elapsed="0.000171"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-07-11T11:34:12.141554" level="INFO">${PC3} = {'ip': '10.10.10.13', 'username': 'osboxes', 'password': 'system@123'}</msg>
<var>${PC3}</var>
<arg>${devices}</arg>
<arg>PC3</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-07-11T11:34:12.141428" elapsed="0.000146"/>
</kw>
<kw name="Initialize Custom Log File">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-07-11T11:34:12.142556" level="INFO" html="true">Directory '&lt;a href="file:///app/robot-framework-automation/logs"&gt;/app/robot-framework-automation/logs&lt;/a&gt;' already exists.</msg>
<arg>${LOG_FOLDER}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-07-11T11:34:12.142345" elapsed="0.000268"/>
</kw>
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:12.143450" level="INFO">${now} = 20250711_113412</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:12.143079" elapsed="0.000399"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:12.143542" elapsed="0.000072"/>
</return>
<msg time="2025-07-11T11:34:12.143730" level="INFO">${timestamp} = 20250711_113412</msg>
<var>${timestamp}</var>
<arg>%Y%m%d_%H%M%S</arg>
<status status="PASS" start="2025-07-11T11:34:12.142831" elapsed="0.000919"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-11T11:34:12.144006" level="INFO">${custom_log} = /app/robot-framework-automation/tests/wifi/TS-001/../../../logs/custom_log_20250711_113412.log</msg>
<var>${custom_log}</var>
<arg>${LOG_FOLDER}/custom_log_${timestamp}.log</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-11T11:34:12.143860" elapsed="0.000165"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-11T11:34:12.144493" level="INFO">${custom_log} = /app/robot-framework-automation/tests/wifi/TS-001/../../../logs/custom_log_20250711_113412.log</msg>
<arg>${custom_log}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-11T11:34:12.144170" elapsed="0.000366"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[${timestamp}] Custom log file initialized: ${custom_log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-11T11:34:12.144674" elapsed="0.000269"/>
</kw>
<kw name="Set Log File Path" owner="final">
<msg time="2025-07-11T11:34:12.145620" level="INFO">[2025-07-11 11:34:12] Custom log file set to: /app/robot-framework-automation/tests/wifi/TS-001/../../../logs/custom_log_20250711_113412.log</msg>
<arg>${custom_log}</arg>
<status status="PASS" start="2025-07-11T11:34:12.145047" elapsed="0.000613"/>
</kw>
<status status="PASS" start="2025-07-11T11:34:12.141897" elapsed="0.003816"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:12.145904" level="INFO">[2025-07-11 11:34:12] ==== Starting Full Ethernet Bridging and Performance Test ====</msg>
<arg>==== Starting Full Ethernet Bridging and Performance Test ====</arg>
<status status="PASS" start="2025-07-11T11:34:12.145789" elapsed="0.000147"/>
</kw>
<kw name="Verify PC to PC Connectivity">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:12.146818" level="INFO">${now} = 2025-07-11 11:34:12</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:12.146618" elapsed="0.000222"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:12.146885" elapsed="0.000040"/>
</return>
<msg time="2025-07-11T11:34:12.147013" level="INFO">${time} = 2025-07-11 11:34:12</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:12.146463" elapsed="0.000568"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:12.147066" elapsed="0.000023"/>
</return>
<msg time="2025-07-11T11:34:12.147163" level="INFO">${ts} = 2025-07-11 11:34:12</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:12.146302" elapsed="0.000878"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:12.147423" level="INFO">[2025-07-11 11:34:12] [2025-07-11 11:34:12] ==== Verifying Ping Connectivity Among PCs ====</msg>
<arg>[${ts}] ==== Verifying Ping Connectivity Among PCs ====</arg>
<status status="PASS" start="2025-07-11T11:34:12.147252" elapsed="0.000204"/>
</kw>
<kw name="Check Ping">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:12.148635" level="INFO">${now} = 2025-07-11 11:34:12</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:12.148416" elapsed="0.000282"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:12.148746" elapsed="0.000034"/>
</return>
<msg time="2025-07-11T11:34:12.148868" level="INFO">${time} = 2025-07-11 11:34:12</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:12.148231" elapsed="0.000657"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:12.148923" elapsed="0.000023"/>
</return>
<msg time="2025-07-11T11:34:12.149022" level="INFO">${ts} = 2025-07-11 11:34:12</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:12.148074" elapsed="0.000965"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:12.149516" level="INFO">[2025-07-11 11:34:12] [2025-07-11 11:34:12] --&gt; 10.10.10.11 pinging 10.10.10.12</msg>
<arg>[${ts}] --&gt; ${SOURCE_DEVICE['ip']} pinging ${TARGET_IP}</arg>
<status status="PASS" start="2025-07-11T11:34:12.149112" elapsed="0.000439"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${SOURCE_DEVICE['ip']}</arg>
<arg>timeout=1</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:12.149645" elapsed="0.000367"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:12.150578" level="INFO">Logging into '10.10.10.11:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:13.431207" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:27:10 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${SOURCE_DEVICE['username']}</arg>
<arg>${SOURCE_DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:12.150099" elapsed="1.281243"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:13.431679" level="INFO">Executing command 'ping -c 3 10.10.10.12'.</msg>
<msg time="2025-07-11T11:34:15.475064" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:15.475208" level="INFO">${ping_output} = PING 10.10.10.12 (10.10.10.12) 56(84) bytes of data.
64 bytes from 10.10.10.12: icmp_seq=1 ttl=64 time=0.407 ms
64 bytes from 10.10.10.12: icmp_seq=2 ttl=64 time=0.572 ms
64 bytes from 10.10.10.12: ic...</msg>
<var>${ping_output}</var>
<arg>ping -c 3 ${TARGET_IP}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:13.431512" elapsed="2.043719"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:15.475878" level="INFO">[2025-07-11 11:34:15] [2025-07-11 11:34:12] [10.10.10.11] Ping Output:
PING 10.10.10.12 (10.10.10.12) 56(84) bytes of data.
64 bytes from 10.10.10.12: icmp_seq=1 ttl=64 time=0.407 ms
64 bytes from 10.10.10.12: icmp_seq=2 ttl=64 time=0.572 ms
64 bytes from 10.10.10.12: icmp_seq=3 ttl=64 time=0.699 ms

--- 10.10.10.12 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2035ms
rtt min/avg/max/mdev = 0.407/0.559/0.699/0.119 ms</msg>
<arg>[${ts}] [${SOURCE_DEVICE['ip']}] Ping Output:\n${ping_output}</arg>
<status status="PASS" start="2025-07-11T11:34:15.475376" elapsed="0.000547"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:15.476485" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] [${SOURCE_DEVICE['ip']}] Ping to ${TARGET_IP}:\n${ping_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:15.476032" elapsed="0.000493"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${ping_output}</arg>
<arg>0% packet loss</arg>
<arg>msg=Ping from ${SOURCE_DEVICE['ip']} to ${TARGET_IP} FAILED!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-11T11:34:15.476628" elapsed="0.000377"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:15.477093" elapsed="0.000197"/>
</kw>
<arg>${PC1}</arg>
<arg>${PC2['ip']}</arg>
<status status="PASS" start="2025-07-11T11:34:12.147572" elapsed="3.329772"/>
</kw>
<kw name="Check Ping">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:15.478379" level="INFO">${now} = 2025-07-11 11:34:15</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:15.478187" elapsed="0.000212"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:15.478441" elapsed="0.000038"/>
</return>
<msg time="2025-07-11T11:34:15.478562" level="INFO">${time} = 2025-07-11 11:34:15</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:15.478041" elapsed="0.000538"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:15.478612" elapsed="0.000022"/>
</return>
<msg time="2025-07-11T11:34:15.478704" level="INFO">${ts} = 2025-07-11 11:34:15</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:15.477899" elapsed="0.000821"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:15.479125" level="INFO">[2025-07-11 11:34:15] [2025-07-11 11:34:15] --&gt; 10.10.10.11 pinging 10.10.10.13</msg>
<arg>[${ts}] --&gt; ${SOURCE_DEVICE['ip']} pinging ${TARGET_IP}</arg>
<status status="PASS" start="2025-07-11T11:34:15.478788" elapsed="0.000377"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${SOURCE_DEVICE['ip']}</arg>
<arg>timeout=1</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:15.479249" elapsed="0.000346"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:15.480102" level="INFO">Logging into '10.10.10.11:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:16.695508" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:34:12 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${SOURCE_DEVICE['username']}</arg>
<arg>${SOURCE_DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:15.479680" elapsed="1.215957"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:16.695996" level="INFO">Executing command 'ping -c 3 10.10.10.13'.</msg>
<msg time="2025-07-11T11:34:18.737568" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:18.737838" level="INFO">${ping_output} = PING 10.10.10.13 (10.10.10.13) 56(84) bytes of data.
64 bytes from 10.10.10.13: icmp_seq=1 ttl=64 time=0.309 ms
64 bytes from 10.10.10.13: icmp_seq=2 ttl=64 time=0.564 ms
64 bytes from 10.10.10.13: ic...</msg>
<var>${ping_output}</var>
<arg>ping -c 3 ${TARGET_IP}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:16.695819" elapsed="2.042054"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:18.738869" level="INFO">[2025-07-11 11:34:18] [2025-07-11 11:34:15] [10.10.10.11] Ping Output:
PING 10.10.10.13 (10.10.10.13) 56(84) bytes of data.
64 bytes from 10.10.10.13: icmp_seq=1 ttl=64 time=0.309 ms
64 bytes from 10.10.10.13: icmp_seq=2 ttl=64 time=0.564 ms
64 bytes from 10.10.10.13: icmp_seq=3 ttl=64 time=0.857 ms

--- 10.10.10.13 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2034ms
rtt min/avg/max/mdev = 0.309/0.576/0.857/0.223 ms</msg>
<arg>[${ts}] [${SOURCE_DEVICE['ip']}] Ping Output:\n${ping_output}</arg>
<status status="PASS" start="2025-07-11T11:34:18.738095" elapsed="0.000846"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:18.739722" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] [${SOURCE_DEVICE['ip']}] Ping to ${TARGET_IP}:\n${ping_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:18.739115" elapsed="0.000666"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${ping_output}</arg>
<arg>0% packet loss</arg>
<arg>msg=Ping from ${SOURCE_DEVICE['ip']} to ${TARGET_IP} FAILED!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-11T11:34:18.739921" elapsed="0.000539"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:18.740604" elapsed="0.000348"/>
</kw>
<arg>${PC1}</arg>
<arg>${PC3['ip']}</arg>
<status status="PASS" start="2025-07-11T11:34:15.477463" elapsed="3.263569"/>
</kw>
<kw name="Check Ping">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:18.742628" level="INFO">${now} = 2025-07-11 11:34:18</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:18.742339" elapsed="0.000319"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:18.742734" elapsed="0.000065"/>
</return>
<msg time="2025-07-11T11:34:18.742930" level="INFO">${time} = 2025-07-11 11:34:18</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:18.742117" elapsed="0.000841"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:18.743011" elapsed="0.000031"/>
</return>
<msg time="2025-07-11T11:34:18.743145" level="INFO">${ts} = 2025-07-11 11:34:18</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:18.741902" elapsed="0.001268"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:18.743955" level="INFO">[2025-07-11 11:34:18] [2025-07-11 11:34:18] --&gt; 10.10.10.12 pinging 10.10.10.11</msg>
<arg>[${ts}] --&gt; ${SOURCE_DEVICE['ip']} pinging ${TARGET_IP}</arg>
<status status="PASS" start="2025-07-11T11:34:18.743284" elapsed="0.000723"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${SOURCE_DEVICE['ip']}</arg>
<arg>timeout=1</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:18.744134" elapsed="0.000543"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:18.745571" level="INFO">Logging into '10.10.10.12:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:19.999382" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:27:10 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${SOURCE_DEVICE['username']}</arg>
<arg>${SOURCE_DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:18.744809" elapsed="1.254689"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:19.999803" level="INFO">Executing command 'ping -c 3 10.10.10.11'.</msg>
<msg time="2025-07-11T11:34:22.045849" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:22.045991" level="INFO">${ping_output} = PING 10.10.10.11 (10.10.10.11) 56(84) bytes of data.
64 bytes from 10.10.10.11: icmp_seq=1 ttl=64 time=0.527 ms
64 bytes from 10.10.10.11: icmp_seq=2 ttl=64 time=0.691 ms
64 bytes from 10.10.10.11: ic...</msg>
<var>${ping_output}</var>
<arg>ping -c 3 ${TARGET_IP}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:19.999658" elapsed="2.046353"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:22.046637" level="INFO">[2025-07-11 11:34:22] [2025-07-11 11:34:18] [10.10.10.12] Ping Output:
PING 10.10.10.11 (10.10.10.11) 56(84) bytes of data.
64 bytes from 10.10.10.11: icmp_seq=1 ttl=64 time=0.527 ms
64 bytes from 10.10.10.11: icmp_seq=2 ttl=64 time=0.691 ms
64 bytes from 10.10.10.11: icmp_seq=3 ttl=64 time=0.613 ms

--- 10.10.10.11 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2035ms
rtt min/avg/max/mdev = 0.527/0.610/0.691/0.066 ms</msg>
<arg>[${ts}] [${SOURCE_DEVICE['ip']}] Ping Output:\n${ping_output}</arg>
<status status="PASS" start="2025-07-11T11:34:22.046149" elapsed="0.000530"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:22.047277" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] [${SOURCE_DEVICE['ip']}] Ping to ${TARGET_IP}:\n${ping_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:22.046793" elapsed="0.000524"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${ping_output}</arg>
<arg>0% packet loss</arg>
<arg>msg=Ping from ${SOURCE_DEVICE['ip']} to ${TARGET_IP} FAILED!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-11T11:34:22.047407" elapsed="0.000341"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:22.047833" elapsed="0.000219"/>
</kw>
<arg>${PC2}</arg>
<arg>${PC1['ip']}</arg>
<status status="PASS" start="2025-07-11T11:34:18.741218" elapsed="3.306905"/>
</kw>
<kw name="Check Ping">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:22.049437" level="INFO">${now} = 2025-07-11 11:34:22</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:22.049227" elapsed="0.000232"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:22.049624" elapsed="0.000041"/>
</return>
<msg time="2025-07-11T11:34:22.049753" level="INFO">${time} = 2025-07-11 11:34:22</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:22.048892" elapsed="0.000879"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:22.049806" elapsed="0.000020"/>
</return>
<msg time="2025-07-11T11:34:22.049896" level="INFO">${ts} = 2025-07-11 11:34:22</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:22.048749" elapsed="0.001163"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:22.050427" level="INFO">[2025-07-11 11:34:22] [2025-07-11 11:34:22] --&gt; 10.10.10.12 pinging 10.10.10.13</msg>
<arg>[${ts}] --&gt; ${SOURCE_DEVICE['ip']} pinging ${TARGET_IP}</arg>
<status status="PASS" start="2025-07-11T11:34:22.049991" elapsed="0.000473"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${SOURCE_DEVICE['ip']}</arg>
<arg>timeout=1</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:22.050561" elapsed="0.000384"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:22.051488" level="INFO">Logging into '10.10.10.12:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:23.407895" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:34:18 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${SOURCE_DEVICE['username']}</arg>
<arg>${SOURCE_DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:22.051036" elapsed="1.356980"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:23.408346" level="INFO">Executing command 'ping -c 3 10.10.10.13'.</msg>
<msg time="2025-07-11T11:34:25.444404" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:25.444544" level="INFO">${ping_output} = PING 10.10.10.13 (10.10.10.13) 56(84) bytes of data.
64 bytes from 10.10.10.13: icmp_seq=1 ttl=64 time=0.426 ms
64 bytes from 10.10.10.13: icmp_seq=2 ttl=64 time=1.04 ms
64 bytes from 10.10.10.13: icm...</msg>
<var>${ping_output}</var>
<arg>ping -c 3 ${TARGET_IP}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:23.408184" elapsed="2.036381"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:25.445229" level="INFO">[2025-07-11 11:34:25] [2025-07-11 11:34:22] [10.10.10.12] Ping Output:
PING 10.10.10.13 (10.10.10.13) 56(84) bytes of data.
64 bytes from 10.10.10.13: icmp_seq=1 ttl=64 time=0.426 ms
64 bytes from 10.10.10.13: icmp_seq=2 ttl=64 time=1.04 ms
64 bytes from 10.10.10.13: icmp_seq=3 ttl=64 time=0.779 ms

--- 10.10.10.13 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2027ms
rtt min/avg/max/mdev = 0.426/0.749/1.042/0.252 ms</msg>
<arg>[${ts}] [${SOURCE_DEVICE['ip']}] Ping Output:\n${ping_output}</arg>
<status status="PASS" start="2025-07-11T11:34:25.444725" elapsed="0.000571"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:25.445894" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] [${SOURCE_DEVICE['ip']}] Ping to ${TARGET_IP}:\n${ping_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:25.445441" elapsed="0.000511"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${ping_output}</arg>
<arg>0% packet loss</arg>
<arg>msg=Ping from ${SOURCE_DEVICE['ip']} to ${TARGET_IP} FAILED!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-11T11:34:25.446057" elapsed="0.000351"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:25.446501" elapsed="0.000279"/>
</kw>
<arg>${PC2}</arg>
<arg>${PC3['ip']}</arg>
<status status="PASS" start="2025-07-11T11:34:22.048289" elapsed="3.398563"/>
</kw>
<kw name="Check Ping">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:25.448101" level="INFO">${now} = 2025-07-11 11:34:25</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:25.447868" elapsed="0.000263"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:25.448178" elapsed="0.000038"/>
</return>
<msg time="2025-07-11T11:34:25.448301" level="INFO">${time} = 2025-07-11 11:34:25</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:25.447709" elapsed="0.000614"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:25.448358" elapsed="0.000020"/>
</return>
<msg time="2025-07-11T11:34:25.448448" level="INFO">${ts} = 2025-07-11 11:34:25</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:25.447512" elapsed="0.000953"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:25.449063" level="INFO">[2025-07-11 11:34:25] [2025-07-11 11:34:25] --&gt; 10.10.10.13 pinging 10.10.10.11</msg>
<arg>[${ts}] --&gt; ${SOURCE_DEVICE['ip']} pinging ${TARGET_IP}</arg>
<status status="PASS" start="2025-07-11T11:34:25.448546" elapsed="0.000558"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${SOURCE_DEVICE['ip']}</arg>
<arg>timeout=1</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:25.449199" elapsed="0.000352"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:25.450065" level="INFO">Logging into '10.10.10.13:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:26.631438" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:27:12 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${SOURCE_DEVICE['username']}</arg>
<arg>${SOURCE_DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:25.449634" elapsed="1.181937"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:26.631938" level="INFO">Executing command 'ping -c 3 10.10.10.11'.</msg>
<msg time="2025-07-11T11:34:28.679226" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:28.679377" level="INFO">${ping_output} = PING 10.10.10.11 (10.10.10.11) 56(84) bytes of data.
64 bytes from 10.10.10.11: icmp_seq=1 ttl=64 time=0.467 ms
64 bytes from 10.10.10.11: icmp_seq=2 ttl=64 time=0.644 ms
64 bytes from 10.10.10.11: ic...</msg>
<var>${ping_output}</var>
<arg>ping -c 3 ${TARGET_IP}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:26.631758" elapsed="2.047697"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:28.680197" level="INFO">[2025-07-11 11:34:28] [2025-07-11 11:34:25] [10.10.10.13] Ping Output:
PING 10.10.10.11 (10.10.10.11) 56(84) bytes of data.
64 bytes from 10.10.10.11: icmp_seq=1 ttl=64 time=0.467 ms
64 bytes from 10.10.10.11: icmp_seq=2 ttl=64 time=0.644 ms
64 bytes from 10.10.10.11: icmp_seq=3 ttl=64 time=0.668 ms

--- 10.10.10.11 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2036ms
rtt min/avg/max/mdev = 0.467/0.593/0.668/0.089 ms</msg>
<arg>[${ts}] [${SOURCE_DEVICE['ip']}] Ping Output:\n${ping_output}</arg>
<status status="PASS" start="2025-07-11T11:34:28.679616" elapsed="0.000624"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:28.680827" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] [${SOURCE_DEVICE['ip']}] Ping to ${TARGET_IP}:\n${ping_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:28.680356" elapsed="0.000512"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${ping_output}</arg>
<arg>0% packet loss</arg>
<arg>msg=Ping from ${SOURCE_DEVICE['ip']} to ${TARGET_IP} FAILED!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-11T11:34:28.680958" elapsed="0.000369"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:28.681415" elapsed="0.000263"/>
</kw>
<arg>${PC3}</arg>
<arg>${PC1['ip']}</arg>
<status status="PASS" start="2025-07-11T11:34:25.447019" elapsed="3.234725"/>
</kw>
<kw name="Check Ping">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:28.683187" level="INFO">${now} = 2025-07-11 11:34:28</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:28.682914" elapsed="0.000301"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:28.683271" elapsed="0.000048"/>
</return>
<msg time="2025-07-11T11:34:28.683427" level="INFO">${time} = 2025-07-11 11:34:28</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:28.682713" elapsed="0.000737"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:28.683495" elapsed="0.000029"/>
</return>
<msg time="2025-07-11T11:34:28.683619" level="INFO">${ts} = 2025-07-11 11:34:28</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:28.682518" elapsed="0.001125"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:28.684336" level="INFO">[2025-07-11 11:34:28] [2025-07-11 11:34:28] --&gt; 10.10.10.13 pinging 10.10.10.12</msg>
<arg>[${ts}] --&gt; ${SOURCE_DEVICE['ip']} pinging ${TARGET_IP}</arg>
<status status="PASS" start="2025-07-11T11:34:28.683741" elapsed="0.000645"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${SOURCE_DEVICE['ip']}</arg>
<arg>timeout=1</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:28.684504" elapsed="0.000512"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:28.685802" level="INFO">Logging into '10.10.10.13:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:30.023658" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:34:25 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${SOURCE_DEVICE['username']}</arg>
<arg>${SOURCE_DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:28.685135" elapsed="1.338643"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:30.024276" level="INFO">Executing command 'ping -c 3 10.10.10.12'.</msg>
<msg time="2025-07-11T11:34:32.070534" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:32.070678" level="INFO">${ping_output} = PING 10.10.10.12 (10.10.10.12) 56(84) bytes of data.
64 bytes from 10.10.10.12: icmp_seq=1 ttl=64 time=0.326 ms
64 bytes from 10.10.10.12: icmp_seq=2 ttl=64 time=0.795 ms
64 bytes from 10.10.10.12: ic...</msg>
<var>${ping_output}</var>
<arg>ping -c 3 ${TARGET_IP}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:30.023995" elapsed="2.046703"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:32.071343" level="INFO">[2025-07-11 11:34:32] [2025-07-11 11:34:28] [10.10.10.13] Ping Output:
PING 10.10.10.12 (10.10.10.12) 56(84) bytes of data.
64 bytes from 10.10.10.12: icmp_seq=1 ttl=64 time=0.326 ms
64 bytes from 10.10.10.12: icmp_seq=2 ttl=64 time=0.795 ms
64 bytes from 10.10.10.12: icmp_seq=3 ttl=64 time=0.605 ms

--- 10.10.10.12 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2035ms
rtt min/avg/max/mdev = 0.326/0.575/0.795/0.192 ms</msg>
<arg>[${ts}] [${SOURCE_DEVICE['ip']}] Ping Output:\n${ping_output}</arg>
<status status="PASS" start="2025-07-11T11:34:32.070840" elapsed="0.000726"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:32.072151" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] [${SOURCE_DEVICE['ip']}] Ping to ${TARGET_IP}:\n${ping_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:32.071692" elapsed="0.000502"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${ping_output}</arg>
<arg>0% packet loss</arg>
<arg>msg=Ping from ${SOURCE_DEVICE['ip']} to ${TARGET_IP} FAILED!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-11T11:34:32.072295" elapsed="0.000385"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:32.072770" elapsed="0.000242"/>
</kw>
<arg>${PC3}</arg>
<arg>${PC2['ip']}</arg>
<status status="PASS" start="2025-07-11T11:34:28.681901" elapsed="3.391183"/>
</kw>
<arg>${PC1}</arg>
<arg>${PC2}</arg>
<arg>${PC3}</arg>
<status status="PASS" start="2025-07-11T11:34:12.146059" elapsed="19.927070"/>
</kw>
<kw name="Capture Baseline System Stats">
<kw name="Open Connection" owner="SSHLibrary">
<arg>${BB_IP}</arg>
<arg>timeout=15s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:32.074139" elapsed="0.000235"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:32.074679" level="INFO">Logging into '10.10.10.23:22' as 'root'.</msg>
<msg time="2025-07-11T11:34:33.180657" level="INFO">Read output: 

BusyBox v1.36.1 (2025-07-06 15:35:16 UTC) built-in shell (ash)

  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------
 OpenWrt 24.10-SNAPSHOT, 1-0-0-49-2025-07-07-02-10-28
 -----------------------------------------------------
root@0C-86-EE-F0-00-01:~#</msg>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:32.074505" elapsed="1.106393"/>
</kw>
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:33.181844" level="INFO">${now} = 2025-07-11 11:34:33</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:33.181627" elapsed="0.000237"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:33.181908" elapsed="0.000036"/>
</return>
<msg time="2025-07-11T11:34:33.182019" level="INFO">${time} = 2025-07-11 11:34:33</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:33.181432" elapsed="0.000602"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:33.182066" elapsed="0.000018"/>
</return>
<msg time="2025-07-11T11:34:33.182148" level="INFO">${ts} = 2025-07-11 11:34:33</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:33.181184" elapsed="0.000979"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:33.182429" level="INFO">[2025-07-11 11:34:33] [2025-07-11 11:34:33] ==== Capturing Baseline CPU, Memory, Interrupts ====</msg>
<arg>[${ts}] ==== Capturing Baseline CPU, Memory, Interrupts ====</arg>
<status status="PASS" start="2025-07-11T11:34:33.182233" elapsed="0.000244"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:33.182669" level="INFO">Executing command 'sar -u 1 1'.</msg>
<msg time="2025-07-11T11:34:34.186393" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:34.186553" level="INFO">${cpu_output} = Linux 6.6.95 (0C-86-EE-F0-00-01) 	07/11/25 	_x86_64_	(1 CPU)

11:34:31        CPU     %user     %nice   %system   %iowait    %steal     %idle
11:34:32        all      2.00      0.00      1.00      0.0...</msg>
<var>${cpu_output}</var>
<arg>sar -u 1 1</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:33.182585" elapsed="1.003989"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:34.186858" level="INFO">Executing command 'sar -r 1 1'.</msg>
<msg time="2025-07-11T11:34:35.235340" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:35.235473" level="INFO">${mem_output} = Linux 6.6.95 (0C-86-EE-F0-00-01) 	07/11/25 	_x86_64_	(1 CPU)

11:34:32    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty
11:34:33        ...</msg>
<var>${mem_output}</var>
<arg>sar -r 1 1</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:34.186739" elapsed="1.048754"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:35.235738" level="INFO">Executing command 'cat /proc/interrupts'.</msg>
<msg time="2025-07-11T11:34:35.293309" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:35.293444" level="INFO">${intr_output} =            CPU0       
  0:         17   IO-APIC   2-edge      timer
  1:          9   IO-APIC   1-edge      i8042
  4:       2015   IO-APIC   4-edge      ttyS0
  8:          1   IO-APIC   8-edge     ...</msg>
<var>${intr_output}</var>
<arg>cat /proc/interrupts</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:35.235636" elapsed="0.057827"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:35.293902" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] ===== Baseline CPU Stats =====\n${cpu_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:35.293601" elapsed="0.000384"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:35.294395" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] ===== Baseline Memory Stats =====\n${mem_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:35.294130" elapsed="0.000325"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:35.294764" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] ===== Baseline Interrupt Stats =====\n${intr_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:35.294570" elapsed="0.000245"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:35.294928" elapsed="0.000199"/>
</kw>
<arg>${BB['ip']}</arg>
<arg>${BB['username']}</arg>
<arg>${BB['password']}</arg>
<status status="PASS" start="2025-07-11T11:34:32.073295" elapsed="3.221884"/>
</kw>
<kw name="Ensure Iperf3 Installed On Device">
<kw name="Open Connection" owner="SSHLibrary">
<arg>${DEVICE['ip']}</arg>
<arg>timeout=2s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:35.295470" elapsed="0.000417"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:35.296428" level="INFO">Logging into '10.10.10.11:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:36.476060" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:34:15 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${DEVICE['username']}</arg>
<arg>${DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:35.295976" elapsed="1.180201"/>
</kw>
<kw name="Ensure Iperf3 Installed">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:36.477195" level="INFO">${now} = 2025-07-11 11:34:36</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:36.476977" elapsed="0.000239"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:36.477270" elapsed="0.000052"/>
</return>
<msg time="2025-07-11T11:34:36.477403" level="INFO">${time} = 2025-07-11 11:34:36</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:36.476795" elapsed="0.000625"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:36.477462" elapsed="0.000029"/>
</return>
<msg time="2025-07-11T11:34:36.477579" level="INFO">${ts} = 2025-07-11 11:34:36</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:36.476620" elapsed="0.001026"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:36.477836" level="INFO">Executing command 'which iperf3 || echo "NOT_FOUND"'.</msg>
<msg time="2025-07-11T11:34:36.489481" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:36.489649" level="INFO">${result} = /usr/bin/iperf3</msg>
<var>${result}</var>
<arg>which iperf3 || echo "NOT_FOUND"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:36.477748" elapsed="0.011926"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Log Message To Console</arg>
<arg>[${ts}] iperf3 NOT FOUND on device, proceeding to install</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:36.489865" elapsed="0.000196"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Log Message To Custom File</arg>
<arg>[${ts}] iperf3 NOT FOUND on device, proceeding to install</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:36.490181" elapsed="0.000130"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Install Iperf3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:36.490418" elapsed="0.000125"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:36.491053" level="INFO">[2025-07-11 11:34:36] [2025-07-11 11:34:36] iperf3 already installed on device</msg>
<arg>[${ts}] iperf3 already installed on device</arg>
<status status="PASS" start="2025-07-11T11:34:36.490804" elapsed="0.000315"/>
</kw>
<arg>'${result}' != 'NOT_FOUND'</arg>
<arg>Log Message To Console</arg>
<arg>[${ts}] iperf3 already installed on device</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:36.490646" elapsed="0.000547"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log Message To Custom File" owner="common_keywords">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:36.492225" level="INFO">${now} = 2025-07-11 11:34:36</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:36.491901" elapsed="0.000350"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:36.492309" elapsed="0.000066"/>
</return>
<msg time="2025-07-11T11:34:36.492461" level="INFO">${timestamp} = 2025-07-11 11:34:36</msg>
<var>${timestamp}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:36.491752" elapsed="0.000729"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:36.493158" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/outputs/d7c6d342-55ef-4a8c-9048-1a50db87681d/log.html"&gt;/app/robot-framework-automation/outputs/d7c6d342-55ef-4a8c-9048-1a50db87681d/log.html&lt;/a&gt;'.</msg>
<arg>${LOG_FILE}</arg>
<arg>[INFO][${timestamp}] ${message}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:36.492570" elapsed="0.000655"/>
</kw>
<arg>[${ts}] iperf3 already installed on device</arg>
<status status="PASS" start="2025-07-11T11:34:36.491545" elapsed="0.001746"/>
</kw>
<arg>'${result}' != 'NOT_FOUND'</arg>
<arg>Log Message To Custom File</arg>
<arg>[${ts}] iperf3 already installed on device</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:36.491335" elapsed="0.001990"/>
</kw>
<status status="PASS" start="2025-07-11T11:34:36.476368" elapsed="0.016998"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:36.493444" elapsed="0.000226"/>
</kw>
<arg>${PC1}</arg>
<status status="PASS" start="2025-07-11T11:34:35.295287" elapsed="1.198428"/>
</kw>
<kw name="Ensure Iperf3 Installed On Device">
<kw name="Open Connection" owner="SSHLibrary">
<arg>${DEVICE['ip']}</arg>
<arg>timeout=2s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:36.493990" elapsed="0.000392"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:36.494916" level="INFO">Logging into '10.10.10.12:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:37.738987" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:34:21 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${DEVICE['username']}</arg>
<arg>${DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:36.494466" elapsed="1.244633"/>
</kw>
<kw name="Ensure Iperf3 Installed">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:37.740025" level="INFO">${now} = 2025-07-11 11:34:37</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:37.739806" elapsed="0.000243"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:37.740097" elapsed="0.000035"/>
</return>
<msg time="2025-07-11T11:34:37.740213" level="INFO">${time} = 2025-07-11 11:34:37</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:37.739637" elapsed="0.000593"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:37.740264" elapsed="0.000022"/>
</return>
<msg time="2025-07-11T11:34:37.740352" level="INFO">${ts} = 2025-07-11 11:34:37</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:37.739496" elapsed="0.000873"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:37.740543" level="INFO">Executing command 'which iperf3 || echo "NOT_FOUND"'.</msg>
<msg time="2025-07-11T11:34:37.752228" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:37.752379" level="INFO">${result} = /usr/bin/iperf3</msg>
<var>${result}</var>
<arg>which iperf3 || echo "NOT_FOUND"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:37.740470" elapsed="0.011929"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Log Message To Console</arg>
<arg>[${ts}] iperf3 NOT FOUND on device, proceeding to install</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:37.752565" elapsed="0.000172"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Log Message To Custom File</arg>
<arg>[${ts}] iperf3 NOT FOUND on device, proceeding to install</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:37.752837" elapsed="0.000126"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Install Iperf3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:37.753115" elapsed="0.000112"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:37.753640" level="INFO">[2025-07-11 11:34:37] [2025-07-11 11:34:37] iperf3 already installed on device</msg>
<arg>[${ts}] iperf3 already installed on device</arg>
<status status="PASS" start="2025-07-11T11:34:37.753451" elapsed="0.000226"/>
</kw>
<arg>'${result}' != 'NOT_FOUND'</arg>
<arg>Log Message To Console</arg>
<arg>[${ts}] iperf3 already installed on device</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:37.753308" elapsed="0.000410"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log Message To Custom File" owner="common_keywords">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:37.754518" level="INFO">${now} = 2025-07-11 11:34:37</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:37.754332" elapsed="0.000207"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:37.754581" elapsed="0.000036"/>
</return>
<msg time="2025-07-11T11:34:37.754701" level="INFO">${timestamp} = 2025-07-11 11:34:37</msg>
<var>${timestamp}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:37.754183" elapsed="0.000536"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:37.754990" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/outputs/d7c6d342-55ef-4a8c-9048-1a50db87681d/log.html"&gt;/app/robot-framework-automation/outputs/d7c6d342-55ef-4a8c-9048-1a50db87681d/log.html&lt;/a&gt;'.</msg>
<arg>${LOG_FILE}</arg>
<arg>[INFO][${timestamp}] ${message}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:37.754793" elapsed="0.000236"/>
</kw>
<arg>[${ts}] iperf3 already installed on device</arg>
<status status="PASS" start="2025-07-11T11:34:37.753980" elapsed="0.001093"/>
</kw>
<arg>'${result}' != 'NOT_FOUND'</arg>
<arg>Log Message To Custom File</arg>
<arg>[${ts}] iperf3 already installed on device</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:37.753811" elapsed="0.001297"/>
</kw>
<status status="PASS" start="2025-07-11T11:34:37.739287" elapsed="0.015860"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:37.755224" elapsed="0.000208"/>
</kw>
<arg>${PC2}</arg>
<status status="PASS" start="2025-07-11T11:34:36.493812" elapsed="1.261664"/>
</kw>
<kw name="Ensure Iperf3 Installed On Device">
<kw name="Open Connection" owner="SSHLibrary">
<arg>${DEVICE['ip']}</arg>
<arg>timeout=2s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:37.755758" elapsed="0.000383"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:37.756683" level="INFO">Logging into '10.10.10.13:22' as 'osboxes'.</msg>
<msg time="2025-07-11T11:34:38.957032" level="INFO">Read output: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

657 updates can be applied immediately.
449 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

Last login: Fri Jul 11 07:34:28 2025 from 10.10.10.10
[?2004hosboxes@osboxes:~$</msg>
<arg>${DEVICE['username']}</arg>
<arg>${DEVICE['password']}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:37.756220" elapsed="1.200943"/>
</kw>
<kw name="Ensure Iperf3 Installed">
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:38.958128" level="INFO">${now} = 2025-07-11 11:34:38</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:38.957907" elapsed="0.000245"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:38.958200" elapsed="0.000035"/>
</return>
<msg time="2025-07-11T11:34:38.958316" level="INFO">${time} = 2025-07-11 11:34:38</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:38.957727" elapsed="0.000608"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:38.958369" elapsed="0.000020"/>
</return>
<msg time="2025-07-11T11:34:38.958460" level="INFO">${ts} = 2025-07-11 11:34:38</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:38.957580" elapsed="0.000897"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:38.958640" level="INFO">Executing command 'which iperf3 || echo "NOT_FOUND"'.</msg>
<msg time="2025-07-11T11:34:38.970554" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:38.970758" level="INFO">${result} = /usr/bin/iperf3</msg>
<var>${result}</var>
<arg>which iperf3 || echo "NOT_FOUND"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:38.958564" elapsed="0.012225"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Log Message To Console</arg>
<arg>[${ts}] iperf3 NOT FOUND on device, proceeding to install</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:38.971040" elapsed="0.000222"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Log Message To Custom File</arg>
<arg>[${ts}] iperf3 NOT FOUND on device, proceeding to install</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:38.971412" elapsed="0.000149"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${result}' == 'NOT_FOUND'</arg>
<arg>Install Iperf3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:38.971685" elapsed="0.000122"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:38.972371" level="INFO">[2025-07-11 11:34:38] [2025-07-11 11:34:38] iperf3 already installed on device</msg>
<arg>[${ts}] iperf3 already installed on device</arg>
<status status="PASS" start="2025-07-11T11:34:38.972103" elapsed="0.000315"/>
</kw>
<arg>'${result}' != 'NOT_FOUND'</arg>
<arg>Log Message To Console</arg>
<arg>[${ts}] iperf3 already installed on device</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:38.971918" elapsed="0.000555"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log Message To Custom File" owner="common_keywords">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:38.973680" level="INFO">${now} = 2025-07-11 11:34:38</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:38.973400" elapsed="0.000313"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:38.973778" elapsed="0.000052"/>
</return>
<msg time="2025-07-11T11:34:38.973949" level="INFO">${timestamp} = 2025-07-11 11:34:38</msg>
<var>${timestamp}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:38.973130" elapsed="0.000847"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:38.974348" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/outputs/d7c6d342-55ef-4a8c-9048-1a50db87681d/log.html"&gt;/app/robot-framework-automation/outputs/d7c6d342-55ef-4a8c-9048-1a50db87681d/log.html&lt;/a&gt;'.</msg>
<arg>${LOG_FILE}</arg>
<arg>[INFO][${timestamp}] ${message}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:38.974085" elapsed="0.000314"/>
</kw>
<arg>[${ts}] iperf3 already installed on device</arg>
<status status="PASS" start="2025-07-11T11:34:38.972836" elapsed="0.001625"/>
</kw>
<arg>'${result}' != 'NOT_FOUND'</arg>
<arg>Log Message To Custom File</arg>
<arg>[${ts}] iperf3 already installed on device</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-11T11:34:38.972598" elapsed="0.001911"/>
</kw>
<status status="PASS" start="2025-07-11T11:34:38.957368" elapsed="0.017200"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:38.974673" elapsed="0.000338"/>
</kw>
<arg>${PC3}</arg>
<status status="PASS" start="2025-07-11T11:34:37.755578" elapsed="1.219499"/>
</kw>
<kw name="Configure Port Range" owner="final">
<msg time="2025-07-11T11:34:38.975347" level="INFO">[2025-07-11 11:34:38] Port range configured: 5201 to 5299</msg>
<arg>5201</arg>
<arg>5299</arg>
<status status="PASS" start="2025-07-11T11:34:38.975184" elapsed="0.000209"/>
</kw>
<kw name="Get Next Available Port" owner="final">
<msg time="2025-07-11T11:34:38.975645" level="INFO">[2025-07-11 11:34:38] Assigned next available port: 5201</msg>
<msg time="2025-07-11T11:34:38.975722" level="INFO">${port1} = 5201</msg>
<var>${port1}</var>
<status status="PASS" start="2025-07-11T11:34:38.975503" elapsed="0.000244"/>
</kw>
<kw name="Get Next Available Port" owner="final">
<msg time="2025-07-11T11:34:38.975987" level="INFO">[2025-07-11 11:34:38] Assigned next available port: 5202</msg>
<msg time="2025-07-11T11:34:38.976055" level="INFO">${port2} = 5202</msg>
<var>${port2}</var>
<status status="PASS" start="2025-07-11T11:34:38.975857" elapsed="0.000222"/>
</kw>
<kw name="Get Next Available Port" owner="final">
<msg time="2025-07-11T11:34:38.976316" level="INFO">[2025-07-11 11:34:38] Assigned next available port: 5203</msg>
<msg time="2025-07-11T11:34:38.976380" level="INFO">${port3} = 5203</msg>
<var>${port3}</var>
<status status="PASS" start="2025-07-11T11:34:38.976182" elapsed="0.000221"/>
</kw>
<kw name="Get Next Available Port" owner="final">
<msg time="2025-07-11T11:34:38.976628" level="INFO">[2025-07-11 11:34:38] Assigned next available port: 5204</msg>
<msg time="2025-07-11T11:34:38.976691" level="INFO">${port4} = 5204</msg>
<var>${port4}</var>
<status status="PASS" start="2025-07-11T11:34:38.976503" elapsed="0.000212"/>
</kw>
<kw name="Get Next Available Port" owner="final">
<msg time="2025-07-11T11:34:38.976933" level="INFO">[2025-07-11 11:34:38] Assigned next available port: 5205</msg>
<msg time="2025-07-11T11:34:38.976993" level="INFO">${port5} = 5205</msg>
<var>${port5}</var>
<status status="PASS" start="2025-07-11T11:34:38.976816" elapsed="0.000201"/>
</kw>
<kw name="Get Next Available Port" owner="final">
<msg time="2025-07-11T11:34:38.977318" level="INFO">[2025-07-11 11:34:38] Assigned next available port: 5206</msg>
<msg time="2025-07-11T11:34:38.977394" level="INFO">${port6} = 5206</msg>
<var>${port6}</var>
<status status="PASS" start="2025-07-11T11:34:38.977115" elapsed="0.000302"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:38.977653" level="INFO">[2025-07-11 11:34:38] ==== Starting Iperf3 Servers ====</msg>
<arg>==== Starting Iperf3 Servers ====</arg>
<status status="PASS" start="2025-07-11T11:34:38.977518" elapsed="0.000406"/>
</kw>
<kw name="Start Iperf Server" owner="final">
<msg time="2025-07-11T11:34:38.980024" level="INFO">[2025-07-11 11:34:38] Starting iperf3 server on 10.10.10.11 port 5201
[2025-07-11 11:34:38] iperf3 server command output:
/bin/sh: 1: sshpass: not found</msg>
<arg>${PC1['ip']}</arg>
<arg>${PC1['username']}</arg>
<arg>${PC1['password']}</arg>
<arg>${port1}</arg>
<status status="PASS" start="2025-07-11T11:34:38.978041" elapsed="0.002058"/>
</kw>
<kw name="Start Iperf Server" owner="final">
<msg time="2025-07-11T11:34:38.982206" level="INFO">[2025-07-11 11:34:38] Starting iperf3 server on 10.10.10.12 port 5202
[2025-07-11 11:34:38] iperf3 server command output:
/bin/sh: 1: sshpass: not found</msg>
<arg>${PC2['ip']}</arg>
<arg>${PC2['username']}</arg>
<arg>${PC2['password']}</arg>
<arg>${port2}</arg>
<status status="PASS" start="2025-07-11T11:34:38.980262" elapsed="0.002011"/>
</kw>
<kw name="Start Iperf Server" owner="final">
<msg time="2025-07-11T11:34:38.983979" level="INFO">[2025-07-11 11:34:38] Starting iperf3 server on 10.10.10.12 port 5203
[2025-07-11 11:34:38] iperf3 server command output:
/bin/sh: 1: sshpass: not found</msg>
<arg>${PC2['ip']}</arg>
<arg>${PC2['username']}</arg>
<arg>${PC2['password']}</arg>
<arg>${port3}</arg>
<status status="PASS" start="2025-07-11T11:34:38.982431" elapsed="0.001605"/>
</kw>
<kw name="Start Iperf Server" owner="final">
<msg time="2025-07-11T11:34:38.986104" level="INFO">[2025-07-11 11:34:38] Starting iperf3 server on 10.10.10.13 port 5204
[2025-07-11 11:34:38] iperf3 server command output:
/bin/sh: 1: sshpass: not found</msg>
<arg>${PC3['ip']}</arg>
<arg>${PC3['username']}</arg>
<arg>${PC3['password']}</arg>
<arg>${port4}</arg>
<status status="PASS" start="2025-07-11T11:34:38.984180" elapsed="0.002036"/>
</kw>
<kw name="Start Iperf Server" owner="final">
<msg time="2025-07-11T11:34:38.990117" level="INFO">[2025-07-11 11:34:38] Starting iperf3 server on 10.10.10.13 port 5205
[2025-07-11 11:34:38] iperf3 server command output:
/bin/sh: 1: sshpass: not found</msg>
<arg>${PC3['ip']}</arg>
<arg>${PC3['username']}</arg>
<arg>${PC3['password']}</arg>
<arg>${port5}</arg>
<status status="PASS" start="2025-07-11T11:34:38.986449" elapsed="0.003762"/>
</kw>
<kw name="Start Iperf Server" owner="final">
<msg time="2025-07-11T11:34:38.992282" level="INFO">[2025-07-11 11:34:38] Starting iperf3 server on 10.10.10.11 port 5206
[2025-07-11 11:34:38] iperf3 server command output:
/bin/sh: 1: sshpass: not found</msg>
<arg>${PC1['ip']}</arg>
<arg>${PC1['username']}</arg>
<arg>${PC1['password']}</arg>
<arg>${port6}</arg>
<status status="PASS" start="2025-07-11T11:34:38.990403" elapsed="0.001933"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-11T11:34:40.992754" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-11T11:34:38.992481" elapsed="2.000376"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:40.993230" level="INFO">[2025-07-11 11:34:40] ==== Running Iperf3 Clients in Full Mesh Parallel ====</msg>
<arg>==== Running Iperf3 Clients in Full Mesh Parallel ====</arg>
<status status="PASS" start="2025-07-11T11:34:40.993009" elapsed="0.000279"/>
</kw>
<kw name="Start Monitoring During Iperf" owner="final">
<msg time="2025-07-11T11:34:40.994452" level="INFO">[2025-07-11 11:34:40] Started real-time resource monitoring on OpenWRT every 1s</msg>
<arg>${BB['ip']}</arg>
<arg>${BB['username']}</arg>
<arg>${BB['password']}</arg>
<status status="PASS" start="2025-07-11T11:34:40.993417" elapsed="0.001135"/>
</kw>
<kw name="Start Iperf Client Parallel" owner="final">
<msg time="2025-07-11T11:34:40.995936" level="INFO">[2025-07-11 11:34:40] Starting iperf3 client 10.10.10.12 -&gt; 10.10.10.11:5201 for 10s</msg>
<arg>${PC2['ip']}</arg>
<arg>${PC2['username']}</arg>
<arg>${PC2['password']}</arg>
<arg>${PC1['ip']}</arg>
<arg>${DURATION}</arg>
<arg>${BANDWIDTH}</arg>
<arg>${port1}</arg>
<status status="PASS" start="2025-07-11T11:34:40.994704" elapsed="0.001277"/>
</kw>
<kw name="Start Iperf Client Parallel" owner="final">
<msg time="2025-07-11T11:34:40.997667" level="INFO">[2025-07-11 11:34:40] Starting iperf3 client 10.10.10.11 -&gt; 10.10.10.12:5202 for 10s</msg>
<arg>${PC1['ip']}</arg>
<arg>${PC1['username']}</arg>
<arg>${PC1['password']}</arg>
<arg>${PC2['ip']}</arg>
<arg>${DURATION}</arg>
<arg>${BANDWIDTH}</arg>
<arg>${port2}</arg>
<status status="PASS" start="2025-07-11T11:34:40.996121" elapsed="0.001600"/>
</kw>
<kw name="Start Iperf Client Parallel" owner="final">
<msg time="2025-07-11T11:34:40.999114" level="INFO">[2025-07-11 11:34:40] Starting iperf3 client 10.10.10.13 -&gt; 10.10.10.12:5203 for 10s</msg>
<arg>${PC3['ip']}</arg>
<arg>${PC3['username']}</arg>
<arg>${PC3['password']}</arg>
<arg>${PC2['ip']}</arg>
<arg>${DURATION}</arg>
<arg>${BANDWIDTH}</arg>
<arg>${port3}</arg>
<status status="PASS" start="2025-07-11T11:34:40.997841" elapsed="0.001337"/>
</kw>
<kw name="Start Iperf Client Parallel" owner="final">
<msg time="2025-07-11T11:34:41.000634" level="INFO">[2025-07-11 11:34:41] Starting iperf3 client 10.10.10.12 -&gt; 10.10.10.13:5204 for 10s</msg>
<arg>${PC2['ip']}</arg>
<arg>${PC2['username']}</arg>
<arg>${PC2['password']}</arg>
<arg>${PC3['ip']}</arg>
<arg>${DURATION}</arg>
<arg>${BANDWIDTH}</arg>
<arg>${port4}</arg>
<status status="PASS" start="2025-07-11T11:34:40.999295" elapsed="0.001407"/>
</kw>
<kw name="Start Iperf Client Parallel" owner="final">
<msg time="2025-07-11T11:34:41.002153" level="INFO">[2025-07-11 11:34:41] Starting iperf3 client 10.10.10.11 -&gt; 10.10.10.13:5205 for 10s</msg>
<arg>${PC1['ip']}</arg>
<arg>${PC1['username']}</arg>
<arg>${PC1['password']}</arg>
<arg>${PC3['ip']}</arg>
<arg>${DURATION}</arg>
<arg>${BANDWIDTH}</arg>
<arg>${port5}</arg>
<status status="PASS" start="2025-07-11T11:34:41.000859" elapsed="0.001367"/>
</kw>
<kw name="Start Iperf Client Parallel" owner="final">
<msg time="2025-07-11T11:34:41.004204" level="INFO">[2025-07-11 11:34:41] Starting iperf3 client 10.10.10.13 -&gt; 10.10.10.11:5206 for 10s</msg>
<arg>${PC3['ip']}</arg>
<arg>${PC3['username']}</arg>
<arg>${PC3['password']}</arg>
<arg>${PC1['ip']}</arg>
<arg>${DURATION}</arg>
<arg>${BANDWIDTH}</arg>
<arg>${port6}</arg>
<status status="PASS" start="2025-07-11T11:34:41.002389" elapsed="0.001880"/>
</kw>
<kw name="Wait For All Iperf Clients" owner="final">
<msg time="2025-07-11T11:34:41.006254" level="INFO">[2025-07-11 11:34:41] Iperf3 output 10.10.10.11 -&gt; 10.10.10.12:5202:
/bin/sh: 1: sshpass: not found

[2025-07-11 11:34:41] Iperf3 output 10.10.10.12 -&gt; 10.10.10.11:5201:
/bin/sh: 1: sshpass: not found

[2025-07-11 11:34:41] Iperf3 output 10.10.10.12 -&gt; 10.10.10.13:5204:
/bin/sh: 1: sshpass: not found

[2025-07-11 11:34:41] Iperf3 output 10.10.10.11 -&gt; 10.10.10.13:5205:
/bin/sh: 1: sshpass: not found

[2025-07-11 11:34:41] Iperf3 output 10.10.10.13 -&gt; 10.10.10.11:5206:
/bin/sh: 1: sshpass: not found

[2025-07-11 11:34:41] Iperf3 output 10.10.10.13 -&gt; 10.10.10.12:5203:
/bin/sh: 1: sshpass: not found

[2025-07-11 11:34:41] All iperf3 client threads completed</msg>
<status status="PASS" start="2025-07-11T11:34:41.004431" elapsed="0.001889"/>
</kw>
<kw name="Stop Monitoring" owner="final">
<msg time="2025-07-11T11:34:41.006567" level="INFO">[2025-07-11 11:34:41] Stopped real-time resource monitoring on OpenWRT</msg>
<status status="PASS" start="2025-07-11T11:34:41.006444" elapsed="0.000156"/>
</kw>
<kw name="Capture Post Test System Stats">
<kw name="Open Connection" owner="SSHLibrary">
<arg>${BB_IP}</arg>
<arg>timeout=15s</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-07-11T11:34:41.007649" elapsed="0.000188"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-07-11T11:34:41.008040" level="INFO">Logging into '10.10.10.23:22' as 'root'.</msg>
<msg time="2025-07-11T11:34:42.108538" level="INFO">Read output: 

BusyBox v1.36.1 (2025-07-06 15:35:16 UTC) built-in shell (ash)

  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------
 OpenWrt 24.10-SNAPSHOT, 1-0-0-49-2025-07-07-02-10-28
 -----------------------------------------------------
root@0C-86-EE-F0-00-01:~#</msg>
<msg time="2025-07-11T11:34:42.108655" level="INFO">[2025-07-11 11:34:41] Connected to OpenWRT for resource monitoring
[2025-07-11 11:34:41] Real-time monitoring stopped and SSH session closed</msg>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-07-11T11:34:41.007922" elapsed="1.100771"/>
</kw>
<kw name="Get Timestamp">
<kw name="Get Current Date" owner="common_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-11T11:34:42.109551" level="INFO">${now} = 2025-07-11 11:34:42</msg>
<var>${now}</var>
<arg>__import__('datetime').datetime.now().strftime('${result_format}')</arg>
<arg>modules=datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-11T11:34:42.109279" elapsed="0.000297"/>
</kw>
<return>
<value>${now}</value>
<status status="PASS" start="2025-07-11T11:34:42.109628" elapsed="0.000037"/>
</return>
<msg time="2025-07-11T11:34:42.109749" level="INFO">${time} = 2025-07-11 11:34:42</msg>
<var>${time}</var>
<arg>%Y-%m-%d %H:%M:%S</arg>
<status status="PASS" start="2025-07-11T11:34:42.109099" elapsed="0.000667"/>
</kw>
<return>
<value>${time}</value>
<status status="PASS" start="2025-07-11T11:34:42.109799" elapsed="0.000019"/>
</return>
<msg time="2025-07-11T11:34:42.109888" level="INFO">${ts} = 2025-07-11 11:34:42</msg>
<var>${ts}</var>
<status status="PASS" start="2025-07-11T11:34:42.108877" elapsed="0.001034"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:42.110210" level="INFO">[2025-07-11 11:34:42] [2025-07-11 11:34:42] ==== Capturing Post-Test CPU, Memory, Interrupts ====</msg>
<arg>[${ts}] ==== Capturing Post-Test CPU, Memory, Interrupts ====</arg>
<status status="PASS" start="2025-07-11T11:34:42.109999" elapsed="0.000260"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:42.110463" level="INFO">Executing command 'sar -u 1 1'.</msg>
<msg time="2025-07-11T11:34:43.123055" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:43.123242" level="INFO">${cpu_output} = Linux 6.6.95 (0C-86-EE-F0-00-01) 	07/11/25 	_x86_64_	(1 CPU)

11:34:40        CPU     %user     %nice   %system   %iowait    %steal     %idle
11:34:41        all      3.00      0.00      2.00      0.0...</msg>
<var>${cpu_output}</var>
<arg>sar -u 1 1</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:42.110380" elapsed="1.012937"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:43.124069" level="INFO">Executing command 'sar -r 1 1'.</msg>
<msg time="2025-07-11T11:34:44.175626" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:44.175908" level="INFO">${mem_output} = Linux 6.6.95 (0C-86-EE-F0-00-01) 	07/11/25 	_x86_64_	(1 CPU)

11:34:41    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty
11:34:42        ...</msg>
<var>${mem_output}</var>
<arg>sar -r 1 1</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:43.123804" elapsed="1.052184"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-07-11T11:34:44.176777" level="INFO">Executing command 'cat /proc/interrupts'.</msg>
<msg time="2025-07-11T11:34:44.224806" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-07-11T11:34:44.225086" level="INFO">${intr_output} =            CPU0       
  0:         17   IO-APIC   2-edge      timer
  1:          9   IO-APIC   1-edge      i8042
  4:       2015   IO-APIC   4-edge      ttyS0
  8:          1   IO-APIC   8-edge     ...</msg>
<var>${intr_output}</var>
<arg>cat /proc/interrupts</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-07-11T11:34:44.176413" elapsed="0.048730"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:44.226153" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] ===== Post-Test CPU Stats =====\n${cpu_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:44.225456" elapsed="0.000804"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:44.227103" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] ===== Post-Test Memory Stats =====\n${mem_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:44.226528" elapsed="0.000676"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-07-11T11:34:44.228025" level="INFO" html="true">Appended to file '&lt;a href="file:///app/robot-framework-automation/logs/custom_log_20250711_113412.log"&gt;/app/robot-framework-automation/logs/custom_log_20250711_113412.log&lt;/a&gt;'.</msg>
<arg>${custom_log}</arg>
<arg>\n[${ts}] ===== Post-Test Interrupt Stats =====\n${intr_output}\n</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-07-11T11:34:44.227494" elapsed="0.000636"/>
</kw>
<kw name="Close Connection" owner="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" start="2025-07-11T11:34:44.228353" elapsed="0.000493"/>
</kw>
<arg>${BB['ip']}</arg>
<arg>${BB['username']}</arg>
<arg>${BB['password']}</arg>
<status status="PASS" start="2025-07-11T11:34:41.006749" elapsed="3.222249"/>
</kw>
<kw name="Log Message To Console" owner="final">
<msg time="2025-07-11T11:34:44.229530" level="INFO">[2025-07-11 11:34:44] ==== Completed Full Ethernet Bridging and Performance Test ====</msg>
<arg>==== Completed Full Ethernet Bridging and Performance Test ====</arg>
<status status="PASS" start="2025-07-11T11:34:44.229217" elapsed="0.000398"/>
</kw>
<doc>Full test with connectivity, baseline CPU/memory/interrupts, parallel iperf3, post-test stats.</doc>
<tag>BB-TRF-BRG-001</tag>
<status status="PASS" start="2025-07-11T11:34:12.137852" elapsed="32.092004"/>
</test>
<status status="PASS" start="2025-07-11T11:34:11.863317" elapsed="32.367269"/>
</suite>
<status status="PASS" start="2025-07-11T11:34:11.862729" elapsed="32.368909"/>
</suite>
<status status="PASS" start="2025-07-11T11:34:11.861932" elapsed="32.370416"/>
</suite>
<status status="PASS" start="2025-07-11T11:34:11.821365" elapsed="32.411660"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">BB-TRF-BRG-001</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="1" fail="0" skip="0">Tests</stat>
<stat name="Wifi" id="s1-s1" pass="1" fail="0" skip="0">Tests.Wifi</stat>
<stat name="TS-001" id="s1-s1-s1" pass="1" fail="0" skip="0">Tests.Wifi.TS-001</stat>
<stat name="TC-001" id="s1-s1-s1-s1" pass="1" fail="0" skip="0">Tests.Wifi.TS-001.TC-001</stat>
</suite>
</statistics>
<errors>
<msg time="2025-07-11T11:34:11.817468" level="WARN">Error in file '/app/robot-framework-automation/tests/wifi/TS-001/TC-001.robot' on line 85: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
</errors>
</robot>
